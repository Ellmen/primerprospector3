#!/usr/bin/env python
# File created 8 Sep 2010

__author__ = "William A. Walters"
__copyright__ = "Copyright 2010, The PrimerProspector project"
__credits__ = ["William A. Walters", "Greg Caporaso", "Rob Knight"]
__license__ = "GPL"
__version__ = "1.0.1-release"
__maintainer__ = "William A. Walters"
__email__ = "william.a.walters@colorado.edu"
__status__ = "Release"

"""This module will filter out gap characters ('.' and '-'), spaces, and 
uracil characters ('U') from an input fasta file.  This should be done 
for fasta files to be analyzed with analyze_primers.py or any downstream 
module requring input fasta files.

Output fasta file(s) generated by this module will have a '_filtered.fasta'
appended to the original fasta file name."""

from os.path import basename
upper = str.upper

from cogent.parse.fasta import MinimalFastaParser

def filter_fasta(fasta_seqs,
                 output_dir,
                 gap_chars = True,
                 space_chars = True,
                 convert_uracil = True,
                 cap_seqs = True):
    """ filters fasta file(s), writes filtered output file(s) 
    
    fasta_seqs: fasta filepath(s).  Multiple filepaths are separated by a 
     colon.
    output_dir: output directory.
    gap_chars: if True, remove '.' and '-' chars.
    space_chars: if True, remove spaces from sequence.
    convert_uracil: if True, convert all "U" to "T".
    """
    
    # Gap characters to remove
    gap_chars_to_remove = []
    if gap_chars:
        gap_chars_to_remove = ['.', '-']
    if space_chars:
        gap_chars_to_remove.append(' ')
    # DNA characters to replace with the given value
    bad_DNA_chars = {'U':'T'}
    
    
    # append all filepaths to the lists
    fasta_filepaths = []
    fps = fasta_seqs.split(":")
    for f in fps:
        fasta_filepaths.append(f)
    
    for fp in fasta_filepaths:
        
        current_fasta = open(fp, "U")
        
        # Generate output file name
        out_fp = output_dir + "/" + basename(fp).split('.')[0] +\
         "_filtered.fasta"
        out_f = open(out_fp, "w")
        
        for label, seq in MinimalFastaParser(current_fasta):
            
            # Remove gaps and/or spaces
            for curr_gap_char in gap_chars_to_remove:
                seq = seq.replace(curr_gap_char, "")
            
            if cap_seqs:
                seq = upper(seq)
            
            # Replace bad dna characters
            if convert_uracil:
                for bad_DNA_char in bad_DNA_chars.iteritems():
                    seq = seq.replace(bad_DNA_char[0], bad_DNA_char[1])
            
            
                
            out_f.write(">" + label + '\n')
            out_f.write(seq + '\n')
            
